#include <bits/stdc++.h>
using namespace std;
/**
* IDEA: DFS to see if it returns to the origin

*/
 
vector<int> gr[100005];
int color[100005], par[100005], st=-1, en;
// 0 - white
// 1 - gray
// 2 - black
 
bool dfs(int s){
  color[s] = 1;
  for(int i : gr[s]){
    if(color[i] == 0){
      par[i] = s;
      if(dfs(i)){
        return 1;
      }
    }
    else if(color[i] == 1){
      st = i;
      en = s;
      return 1;
    }
  }
  color[s] = 2;
  return 0;
}

int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);

  // freopen("main.inp","r",stdin);
  // freopen("main.out","w",stdout);

  int n,m;

  cin>>n>>m;

  while(m--){
    int u,v;
    cin>>u>>v;
    gr[u].push_back(v);
  }
  
  for(int i=1;i<=n;i++){
    if(color[i] == 0 && dfs(i)){
      break;
    }
  }
  
  if(st == -1){
    cout<<"IMPOSSIBLE";
    return 0;
  }
  
  deque<int> v;
  v.push_front(st);
  while(en != st){
    v.push_front(en);
    en = par[en];
  }
  v.push_front(st);
  cout<<v.size()<<endl;
  for(int i : v){
    cout<<i<<' ';
  }
  return 0;
}
