#include <bits/stdc++.h>
using namespace std;
/**
* IDEA:
*/

const long long kn = 2e5 + 5;
long long a[kn], tree[4*kn], l1[4*kn], l2[4*kn];

void build(int id, int l, int r){
    if(l == r){
        tree[id] = a[l];
        return;
    }
    int mid = l + r >> 1;
    build(2*id, l, mid);
    build(2*id+1, mid+1, r);

    tree[id] = tree[2*id] + tree[2*id+1];
}

void propagate(int id, int l, int r){
    if(l2[id]){
        tree[id] = (r - l + 1) * l2[id];
        if(l != r){
            l2[2*id] = l2[2*id+1] = l2[id];
            l1[2*id] = l1[2*id+1] = 0;
        }
        l2[id] = 0;
    }

    if(l1[id]){
        tree[id] += (r - l + 1) * l1[id];
        if(l != r){
            l1[2*id] += l1[id];
            l1[2*id+1] += l1[id];
        }
        l1[id] = 0;
    }
}

void update(int id, int l, int r, int u, int v, int type, int val){
    propagate(id, l, r);
    if(r < u || l > v){
        return;
    }
    if(u <= l && r <= v){
        if(type == 1){
            l1[id] += val;
        }
        else{
            l2[id] = val;
            l1[id] = 0;
        }
        propagate(id, l, r);
        return;
    }
    int mid = l + r >> 1;
    update(2*id, l, mid, u, v, type, val);
    update(2*id+1, mid+1, r, u, v, type, val);

    tree[id] = tree[2*id] + tree[2*id+1];
}

long long get(int id, int l, int r, int u, int v){
    propagate(id, l, r);
    if(r < u || l > v){
        return 0;
    }
    if(u <= l && r <= v){
        return tree[id];
    }
    int mid = l + r >> 1;
    return get(2*id, l, mid, u, v) + get(2*id+1, mid+1, r, u, v);
}

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    // freopen("main.inp","r",stdin);
    // freopen("main.out","w",stdout);

    int n, q;

    cin>>n>>q;

    for(int i=1;i<=n;i++){
        cin>>a[i];
    }

    build(1, 1, n);

    while(q--){
        int t;
        cin>>t;
        if(t == 1 || t == 2){
            int l, r, val;
            cin>>l>>r>>val;
            update(1, 1, n, l, r, t, val);
        }
        else{
            int l, r;
            cin>>l>>r;
            cout<<get(1, 1, n, l, r)<<endl;
        }
    }

    return 0;
}
/**
just win today.
⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⣠⣴⣶⣿⣿⣷⣶⣄⣀⣀⠀⠀
⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⣰⣾⣿⣿⡿⢿⣿⣿⣿⣿⣿⣿⣿⣷⣦⡀⠀⠀
⠀⠀⠀⠀⠀⠀ ⠀⢀⣾⣿⣿⡟⠁⣰⣿⣿⣿⡿⠿⠻⠿⣿⣿⣿⣿⣧
⠀⠀⠀⠀⠀ ⠀⠀⣾⣿⣿⠏⠀⣴⣿⣿⣿⠉⠀⠀⠀⠀⠀⠈⢻⣿⣿⣇
⠀⠀⠀⠀  ⣠⣼⣿⣿⡏⠀⢠⣿⣿⣿⠇⠀⠀⠀⠀⠀⠀⠀⠈⣿⣿⣿⡀
⠀⠀⠀ ⣰⣿⣿⣿⣿⣿⡇⠀⢸⣿⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⡇
⠀⠀ ⢰⣿⣿⡿⣿⣿⣿⡇⠀⠘⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⢀⣸⣿⣿⣿⠁
⠀  ⣿⣿⣿⠁⣿⣿⣿⡇⠀⠀⠻⣿⣿⣿⣷⣶⣶⣶⣶⣶⣿⣿⣿⣿⠃
  ⢰⣿⣿⡇⠀⣿⣿⣿⠀⠀⠀⠀⠈⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠁⠀
  ⢸⣿⣿⡇⠀⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠉⠛⠛⠛⠉⢉⣿⣿⠀⠀⠀⠀
  ⢸⣿⣿⣇⠀⣿⣿⣿⠀⠀⠀⠀⠀⢀⣤⣤⣤⡀⠀⠀⢸⣿⣿⣿⣷⣦⠀
   ⢻⣿⣿⣶⣿⣿⣿⠀⠀⠀⠀⠀⠈⠻⣿⣿⣿⣦⡀⠀⠉⠉⠻⣿⣿⡇
     ⠛⠿⣿⣿⣿⣿⣷⣤⡀⠀⠀⠀⠀⠈⠹⣿⣿⣇⣀ ⣠⣾⣿⣿⡇
          ⠹⣿⣿⣿⣿⣦⣤⣤⣤⣤⣾⣿⣿⣿⣿⣿⣿⣿⣿⡟⠀
              ⠉⠻⢿⣿⣿⣿⣿⣿⣿⠿⠋⠉⠛⠋⠉⠉⠁⠀
⠀                 ⠈⠉⠉⠉⠁
**/
